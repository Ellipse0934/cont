include os.cn

proc ptr+ ptr int -> ptr: swap *int      + *ptr end
proc ptr- ptr int -> ptr: swap *int swap - *ptr end
proc +ptr int ptr -> ptr:      *int      + *ptr end
proc -ptr int ptr -> ptr:      *int      - *ptr end

proc sizeof(int) -> int: 8 end
proc @int ptr -> int: @ end
proc !int int ptr: ! end
proc sizeof(ptr) -> int: 8 end
proc @ptr ptr -> ptr: @ *ptr end
proc !ptr ptr ptr: swap *int swap ! end

proc inc ptr:
  dup @int 1 + swap ! 
end
proc dec ptr:
  dup @int 1 - swap ! 
end
proc inc8 ptr:
  dup @8 1 + swap !8 
end
proc dec8 ptr:
  dup @8 1 - swap !8 
end

proc incby ptr int:
  bind ptr by:
    ptr @int by + ptr !
  end
end
proc decby ptr int:
  bind ptr by:
    ptr @int by - ptr !
  end
end
proc inc8by ptr int:
  bind ptr by:
    ptr @8 by + ptr !8
  end
end
proc dec8by ptr int:
  bind ptr by:
    ptr @8 by - ptr !8
  end
end

proc boolify int -> int: 0 > end

proc and int int -> int: boolify swap boolify + 1 > end
proc or int int -> int: boolify swap boolify + 0 > end
proc not int -> int: boolify 1 - boolify end

proc sizeof(str) -> int: 16 end

proc @str.len ptr -> int: @ end
proc @str.data ptr -> ptr: 8 ptr+ @ptr end
proc @str ptr -> int ptr: 
  dup @str.len 
  swap @str.data 
end

proc !str.len int ptr: ! end
proc !str.data ptr ptr: 8 ptr+ !ptr end
proc !str int ptr ptr: 
  dup rot swap !str.data
  !str.len 
end

proc 2duppi ptr int -> ptr int ptr int:
  bind a b:
    a b a b
  end
end

proc puts int ptr: 1 write drop end 
proc input ptr -> int ptr: dup 1024 swap 0 read swap end

proc null_str_len ptr -> int:
  0 swap
  dup @8 0 !=
  while
    swap 1 +
    dup rot dup rot ptr+ @8 0 !=
  end drop
end

proc nstr_to_str ptr -> int ptr: dup null_str_len swap end

proc open2 int int ptr -> int:
  swap drop opensys2
end
proc open int int int ptr -> int:
  swap drop opensys
end

proc streq int ptr int ptr -> int:
  bind len data len2 data2:
    len2 len == if
      0 1
      len 0 >
      while
        drop
        bind curlen:
          curlen
          data curlen ptr+ @8
          data2 curlen ptr+ @8
          ==
        end
        bind curlen res:
          curlen 1 + res
          curlen 1 + len <
          res and
        end
      end
      swap drop
    else
      0
    end 
  end
end